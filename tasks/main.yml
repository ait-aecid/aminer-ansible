# - name: Include OS specific variables
#   include_vars: "{{ item }}"
#   with_first_found:
#     - "{{ ansible_distribution }}.yml"
#     - "{{ ansible_os_family }}.yml"
#   tags: vars

- name: Include Debian Variables
  include_vars: debian.yml
  when: ansible_distribution == "Debian" or ansible_distribution == "Ubuntu"
  tags: vars

- name: Include Fedora Variables
  include_vars: fedora.yml
  when: ansible_distribution == "Fedora"
  tags: vars

- name: Include RedHat Variables
  include_vars: RedHat.yml
  when: ansible_distribution == "RedHat"
  tags: vars


- name: Install Packages
  package:
    name: "{{aminer_packages}}"
    state: latest
  tags: install

- name: Install Tools
  package:
    name: "{{aminer_tools}}"
    state: latest
  tags: install

- name: Git clone OpenSource-Aminer
  git:
    repo: "{{aminer_gitrepo}}"
    dest: "{{aminer_repopath}}"
  when: aminer_gitrepo != False

- name: Add build-id to Aminer
  shell:
    chdir: "{{aminer_repopath}}"
    cmd: scripts/addbuildid.sh

- name: Synchronize Aminer-etc
  synchronize:
    group: no
    owner: no
    src: "{{aminer_repopath}}/source/root/etc/aminer/"
    dest: "/etc/aminer/"

- name: Synchronize Aminer-systemd-service
  synchronize:
    group: no
    owner: no
    src: "{{aminer_repopath}}/source/root/lib/systemd/system/aminer.service"
    dest: "{{aminer_systemdloc}}"

- name: Synchronize Aminer-libdir
  synchronize:
    group: no
    owner: no
    delete: yes
    src: "{{aminer_repopath}}/source/root/usr/lib/logdata-anomaly-miner/"
    dest: "/usr/lib/logdata-anomaly-miner/"

- name: Synchronize Aminer-docs
  synchronize:
    group: no
    owner: no
    src: "{{aminer_repopath}}/source/root/usr/share/doc/"
    dest: "/usr/share/doc/"

- name: copy aminerwrapper
  copy:
    src: "{{aminer_repopath}}/scripts/aminerwrapper.sh"
    dest: "/usr/local/bin/aminerwrapper.sh"

- name: Set aminerwrapper permissions
  file:
    path: "/usr/local/bin/aminerwrapper.sh"
    owner: root
    group: root
    mode: 0755

- name: Create aminer-user
  user:
    name: "{{aminer_user}}"
    shell: "{{aminer_usershell}}"

- name: Create var-dir
  file:
    path: "{{aminer_vardir}}"
    owner: "{{aminer_user}}"
    group: "{{aminer_group}}"
    mode: "0700"
    state: "directory"

- name: Create remote control link
  file:
    src: "/usr/local/bin/aminerwrapper.sh"
    dest: "/usr/bin/aminerremotecontrol"
    state: "link"

- name: Create aminer link
  file:
    src: "/usr/local/bin/aminerwrapper.sh"
    dest: "/usr/bin/aminer"
    state: "link"

- name: Create aminer-persistence link
  file:
    src: "/usr/local/bin/aminerwrapper.sh"
    dest: "/usr/bin/aminer-persistence"
    state: "link"
 
- name: Set aminer permissions
  file:
    path: "/usr/lib/logdata-anomaly-miner/aminer.py"
    owner: root
    group: root
    mode: 0755

- name: Set aminerremotecontrol permissions
  file:
    path: "/usr/lib/logdata-anomaly-miner/aminerremotecontrol.py"
    owner: root
    group: root
    mode: 0755

- name: Set aminer-persistence permissions
  file:
    path: "/usr/lib/logdata-anomaly-miner/aminer-persistence.py"
    owner: root
    group: root
    mode: 0755

- name: Install orjson
  pip:
    name: orjson
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install zmq
  pip:
    name: zmq
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install python3-cerberus
  pip:
    name: cerberus
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: pip self-update
  pip:
    name: pip
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install python3-kafka
  pip:
    name: kafka-python
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install python3-patsy
  pip:
    name: patsy
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install python3-statsmodels
  pip:
    name: statsmodels
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install importlib-metadata
  pip:
    name: importlib-metadata
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install tz
  pip:
    name: tz
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install scipy
  pip:
    name: scipy
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install numpy
  pip:
    name: numpy
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install setuptools
  pip:
    name: setuptools
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install python-dateutil
  pip:
    name: python-dateutil
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install six
  pip:
    name: six
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install kafka
  pip:
    name: kafka
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install urllib3
  pip:
    name: urllib3
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install defusedxml
  pip:
    name: defusedxml
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install PyYAML
  pip:
    name: PyYAML
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install patsy
  pip:
    name: patsy
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Install pylibacl
  pip:
    name: pylibacl
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest
  when: ansible_distribution != "RedHat"

- name: Install pytz
  pip:
    name: pytz
    virtualenv: /usr/lib/logdata-anomaly-miner/.venv
    state: latest

- name: Set venv activate permissions
  file:
    path: "/usr/lib/logdata-anomaly-miner/.venv/bin/activate"
    owner: root
    group: root
    mode: 0755

- name: Create man-page for aminer
  shell:
    cmd: xsltproc --output /usr/share/man/man1/aminer.1  -''-nonet -''-param man.charmap.use.subset "0" -''-param make.year.ranges "1" -''-param make.single.year.ranges "1" {{aminer_docbookxslpath}} {{aminer_repopath}}/docs/manpages/aminer.1.xml && gzip /usr/share/man/man1/aminer.1
    creates: /usr/share/man/man1/aminer.1.gz
  when: ansible_distribution != "RedHat"

- name: Create man-page for aminerremotecontrol
  shell:
    cmd: xsltproc --output /usr/share/man/man1/aminerremotecontrol.1  -''-nonet -''-param man.charmap.use.subset "0" -''-param make.year.ranges "1" -''-param make.single.year.ranges "1" {{aminer_docbookxslpath}} {{aminer_repopath}}/docs/manpages/aminerremotecontrol.1.xml && gzip /usr/share/man/man1/aminerremotecontrol.1
    creates: /usr/share/man/man1/aminerremotecontrol.1.gz
  when: ansible_distribution != "RedHat"
