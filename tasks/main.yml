# - name: Include OS specific variables
#   include_vars: "{{ item }}"
#   with_first_found:
#     - "{{ ansible_distribution }}.yml"
#     - "{{ ansible_os_family }}.yml"
#   tags: vars

- name: Include Debian-Buster Variables
  include_vars: debian-buster.yml
  when: ansible_distribution == "Debian" and ansible_distribution_major_version < '11'
  tags: vars

- name: Include Debian Variables
  include_vars: debian.yml
  when: ansible_distribution == "Debian" and ansible_distribution_major_version >= '11'
  tags: vars

- name: Include Ubuntu Variables
  include_vars: debian.yml
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= '20'
  tags: vars

- name: Include Fedora Variables
  include_vars: fedora.yml
  when: ansible_distribution == "Fedora"
  tags: vars

- name: Include RedHat Variables
  include_vars: RedHat.yml
  when: ansible_distribution == "RedHat"
  tags: vars


- name: Install Packages
  package:
    name: "{{aminer_packages}}"
    state: latest
  tags: install

- name: Install Tools
  package:
    name: "{{aminer_tools}}"
    state: latest
  tags: install


- name: Git clone OpenSource-Aminer
  git:
    repo: "{{aminer_gitrepo}}"
    dest: "{{aminer_repopath}}"
  when: aminer_gitrepo != False

- name: Add build-id to Aminer
  shell:
    chdir: "{{aminer_repopath}}"
    cmd: scripts/addbuildid.sh

- name: Synchronize Aminer-etc
  synchronize:
    group: no
    owner: no
    src: "{{aminer_repopath}}/source/root/etc/aminer/"
    dest: "/etc/aminer/"

- name: Synchronize Aminer-systemd-service
  synchronize:
    group: no
    owner: no
    src: "{{aminer_repopath}}/source/root/lib/systemd/system/aminer.service"
    dest: "{{aminer_systemdloc}}"

- name: Synchronize Aminer-libdir
  synchronize:
    group: no
    owner: no
    delete: yes
    src: "{{aminer_repopath}}/source/root/usr/lib/logdata-anomaly-miner/"
    dest: "/usr/lib/logdata-anomaly-miner/"

- name: Synchronize Aminer-docs
  synchronize:
    group: no
    owner: no
    src: "{{aminer_repopath}}/source/root/usr/share/doc/"
    dest: "/usr/share/doc/"

- name: Create aminer-user
  user:
    name: "{{aminer_user}}"
    shell: "{{aminer_usershell}}"

- name: Create var-dir
  file:
    path: "{{aminer_vardir}}"
    owner: "{{aminer_user}}"
    group: "{{aminer_group}}"
    mode: "0700"
    state: "directory"

- name: Create remote control link
  file:
    src: "/usr/lib/logdata-anomaly-miner/aminerremotecontrol.py"
    dest: "/usr/bin/aminerremotecontrol"
    state: "link"

- name: Create aminer link
  file:
    src: "/usr/lib/logdata-anomaly-miner/aminer.py"
    dest: "/usr/bin/aminer"
    state: "link"

- name: Create aminer-persistence link
  file:
    src: "/usr/lib/logdata-anomaly-miner/aminer-persistence.py"
    dest: "/usr/bin/aminer-persistence"
    state: "link"
 
- name: Set aminer permissions
  file:
    path: "/usr/lib/logdata-anomaly-miner/aminer.py"
    owner: root
    group: root
    mode: 0755

- name: Run Buster Tasks
  include_tasks: buster.yml
  when: ansible_distribution == "Debian" and ansible_distribution_major_version < '11'

- name: Run Debian > 10  Tasks
  include_tasks: debian.yml
  when: ansible_distribution == "Debian" and ansible_distribution_major_version > '10'

- name: Run Ubuntu > 18 Tasks
  include_tasks: debian.yml
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= '20'

- name: Run RedHat Tasks
  include_tasks: RedHat.yml
  when: ansible_distribution == "RedHat"

- name: Install orjson
  pip:
    name: orjson
    executable: pip3
    state: latest

- name: Install pyzmq
  pip:
    name: pyzmq
    executable: pip3
    state: latest

- name: Find zmq
  find:
    paths: "/usr"
    patterns: 'zmq'
    recurse: yes
  register: zmq

- name: Find pyzmq.libs
  find:
    paths: "/usr"
    patterns: 'pyzmq.libs'
    recurse: yes
  register: pyzmqlibs

- name: Link zmq
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{zmq.files }}"

- name: Link pyzmq.libs
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{pyzmqlibs.files }}"


- name: Find json.cpython
  find:
    paths: "/usr"
    patterns: 'orjson.cpython*.so'
    recurse: yes
  register: orjson

- name: Link orjson
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{orjson.files }}"

- name: Find pylibacl
  find:
    paths: "{{aminer_pythonpath}}"
    patterns: 'posix1e.cpython*.so'
  register: output

- name: Link pylibacl
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{output.files }}"

- name: Link scipy
  file:
    src: "{{aminer_pythonpath}}/scipy"
    dest: /etc/aminer/conf-enabled/scipy
    state: link

- name: Find numpy
  find:
    paths: "/usr"
    patterns: 'numpy'
    recurse: yes
  register: numpy

- name: Link numpy
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{numpy.files }}"

- name: Link python3-pkg_resources
  file:
    src: "{{aminer_pythonpath}}/pkg_resources"
    dest: /etc/aminer/conf-enabled/pkg_resources
    state: link
- name: Link python3-yaml
  file:
    src: "{{aminer_pythonpath}}/yaml"
    dest: /etc/aminer/conf-enabled/yaml
    state: link

- name: Link python3-tz
  file:
    src: "{{aminer_pythonpath}}/pytz"
    dest: /etc/aminer/conf-enabled/pytz
    state: link

- name: Find python3-dateutil
  find:
    paths: "/usr"
    patterns: 'dateutil'
    recurse: yes
  register: dateutil

- name: Link python3-dateutil
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{dateutil.files }}"

- name: Find pandas
  find:
    paths: "/usr"
    patterns: 'pandas'
    recurse: yes
  register: pandas

- name: Link pandas
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{pandas.files }}"

- name: Find joblib
  find:
    paths: "/usr"
    patterns: 'joblib'
    recurse: yes
  register: joblib

- name: Link joblib
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{joblib.files }}"

- name: Find patsy
  find:
    paths: "/usr"
    patterns: 'patsy'
    recurse: yes
  register: patsy

- name: Link patsy
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{patsy.files }}"

- name: Find six
  find:
    paths: "/usr"
    patterns: 'six'
    recurse: yes
  register: six

- name: Link six
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{six.files }}"

- name: Find statsmodels
  find:
    paths: "/usr"
    patterns: 'statsmodels'
    recurse: yes
  register: statsmodels

- name: Link statsmodels
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{statsmodels.files }}"

- name: Find defusedxml
  find:
    paths: "/usr"
    patterns: 'defusedxml'
    recurse: yes
  register: defusedxml

- name: Link defusedxml
  file:
    src: "{{ item.path }}"
    dest: "/etc/aminer/conf-enabled/{{item.path.split('/')[-1]}}"
    state: link
  with_items: "{{defusedxml.files }}"

- name: Create man-page for aminer
  shell:
    cmd: xsltproc --output /usr/share/man/man1/aminer.1  -''-nonet -''-param man.charmap.use.subset "0" -''-param make.year.ranges "1" -''-param make.single.year.ranges "1" {{aminer_docbookxslpath}} {{aminer_repopath}}/docs/manpages/aminer.1.xml && gzip /usr/share/man/man1/aminer.1
    creates: /usr/share/man/man1/aminer.1.gz
  when: ansible_distribution != "RedHat"

- name: Create man-page for aminerremotecontrol
  shell:
    cmd: xsltproc --output /usr/share/man/man1/aminerremotecontrol.1  -''-nonet -''-param man.charmap.use.subset "0" -''-param make.year.ranges "1" -''-param make.single.year.ranges "1" {{aminer_docbookxslpath}} {{aminer_repopath}}/docs/manpages/aminerremotecontrol.1.xml && gzip /usr/share/man/man1/aminerremotecontrol.1
    creates: /usr/share/man/man1/aminerremotecontrol.1.gz
  when: ansible_distribution != "RedHat"
